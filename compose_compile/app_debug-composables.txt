restartable skippable scheme("[androidx.compose.ui.UiComposable, [_], [_], [_], [_], [androidx.compose.ui.UiComposable]]") fun MotionScaffoldNDK(
  stable modifier: Modifier? = @static Companion
  stable onScale: Function1<Float, Unit>
  stable onReadMode: Boolean
  stable onFolderButtonClickListener: Function0<Unit>? = @static {

}

  unused stable topBar: Function2<Composer, Int, Unit>? = @static ComposableSingletons$GraphComposablesNDKKt.lambda-1
  stable bottomBar: Function2<Composer, Int, Unit>? = @static ComposableSingletons$GraphComposablesNDKKt.lambda-2
  stable snackbarHost: Function2<Composer, Int, Unit>? = @static ComposableSingletons$GraphComposablesNDKKt.lambda-3
  stable floatingActionButton: Function2<Composer, Int, Unit>? = @static ComposableSingletons$GraphComposablesNDKKt.lambda-4
  stable floatingActionButtonPosition: FabPosition = @dynamic Companion.End
  stable containerColor: Color = @dynamic MaterialTheme.colorScheme.background
  stable contentColor: Color = @dynamic contentColorFor(containerColor, $composer, 0b1110 and $dirty shr 0b00011011)
  stable contentWindowInsets: WindowInsets? = @dynamic ScaffoldDefaults.contentWindowInsets
  stable content: @[ExtensionFunctionType] Function3<BoxScope, Composer, Int, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DrawNodeSelectedNDK(
  stable node: Function0<Node>
  stable dragAble: Boolean
  stable onDragStart: Function0<Unit>? = @static {

}

  stable onDragEnd: Function0<Unit>? = @static {

}

  stable onNodeMoved: Function1<Offset, Unit>? = @static { <anonymous parameter 0>: Offset ->

}

  stable onClickListener: Function1<Node, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DrawEdgeSelectedNDK(
  stable start: Function0<Node>
  stable end: Function0<Node>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DrawEdgeSelectedNDKV2(
  stable startOffset: Function0<Offset>
  stable endOffset: Function0<Offset>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun drawNotificationNodeNDK(
  stable node: Function0<Node>
)
